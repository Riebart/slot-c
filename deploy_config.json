{
    "StackNamePrefix": "SLOTC",
    "TemplateContents": {
        "FileName": "slot-c.template",
        "S3Bucket": "s3_bucket_name.private"
    },
    "StackOperationConfig": {
        "Capabilities": [ "CAPABILITY_IAM" ]
    },
    "BaseStackParameters": { },
    "LambdaFunctions": {
        "GetMessages": {
            "CodeFiles": [
                [ "Lambda/GetMessages.py", "index.py" ]
            ],
            "Publish": true,
            "Alias": "Deployed",
            "CloudWatchLogsRetention": 3
        },
        "PostMessage": {
            "CodeFiles": [
                [ "Lambda/PostMessage.py", "index.py" ]
            ],
            "Publish": true,
            "Alias": "Deployed",
            "CloudWatchLogsRetention": 3
        },
        "GetParticipants": {
            "CodeFiles": [
                [ "Lambda/GetParticipants.py", "index.py" ]
            ],
            "Publish": true,
            "Alias": "Deployed",
            "CloudWatchLogsRetention": 3
        },
        "PostParticipant": {
            "CodeFiles": [
                [ "Lambda/PostParticipant.py", "index.py" ]
            ],
            "Publish": true,
            "Alias": "Deployed",
            "CloudWatchLogsRetention": 3
        },
        "GetChannels": {
            "CodeFiles": [
                [ "Lambda/GetChannels.py", "index.py" ]
            ],
            "Publish": true,
            "Alias": "Deployed",
            "CloudWatchLogsRetention": 3
        }
    },
    "CustomEpilogue": [
        {
            "Service": [ "cloudformation" ],
            "Name": "Update JavaScript constants files",
            "Conditions": [ "StackChanged" ],
            "Code": [
                "api_id = cloudformation.describe_stack_resource(StackName='{{STACKNAME}}', LogicalResourceId='API')['StackResourceDetail']['PhysicalResourceId']",
                "fp = open('static-content/assets/js/constants.js','w')",
                "fp.write('var DEFAULT_CHANNEL_NAME = \\'General\\';\\n')",
                "fp.write('var MAXIMUM_UPDATE_BACKOFF = 25.0;\\n')",
                "fp.write('var API_ENDPOINT = \\'https://%s.execute-api.us-east-1.amazonaws.com/Main\\';\\n' % api_id)",
                "fp.close()"
            ]
        },
        {
            "Service": [ "apigateway", "cloudformation" ],
            "Name": "Deploying API Gateway stage.",
            "Conditions": [ "StackChanged" ],
            "Code": [
                "api_id = cloudformation.describe_stack_resource(StackName='{{STACKNAME}}', LogicalResourceId='API')['StackResourceDetail']['PhysicalResourceId']",
                "apigateway.create_deployment(restApiId=api_id, stageName='Main')"
            ]
        },
        {
            "Service": [ ],
            "Name": "Webapp static content digest",
            "Code": [
                "import subprocess, hashlib, json",
                "hash = hashlib.sha256(''.join([ open(f,'r').read() for f in sorted(subprocess.check_output(('find','static-content','-type','f')).strip().split('\\n')) ])).hexdigest()",
                "fp = open('static-content/version.json','w')",
                "fp.write(json.dumps({'hash': hash}))",
                "fp.close()"
            ]
        },
        {
            "Service": [ "s3", "cloudformation" ],
            "Name": "Upload static website content to S3 bucket.",
            "Code": [
                "import subprocess",
                "s3_bucket = cloudformation.describe_stack_resource(StackName='{{STACKNAME}}', LogicalResourceId='StaticContentBucket')['StackResourceDetail']['PhysicalResourceId']",
                "print subprocess.check_output(('aws','s3','cp','--recursive','./static-content/','s3://%s' % s3_bucket))"
            ]
        }
    ]
}
